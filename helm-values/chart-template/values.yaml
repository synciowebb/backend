# Default values for ciaws.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ubuntu
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# Secret for pull image
imagePullSecrets:
  - name: vsmreg

nameOverride: ""
fullnameOverride: ""

# Secret for deployment
# envSecrets: {}

# Set Host
# hostAliases: {}
#  - ip: "172.22.104.93"
#    hostnames:
#      - "ocp2-mongodb01-vp"

## Additional environment variables to set
## E.g:
## extraEnvVars:
##   - name: FOO
##     value: BAR
##
extraEnvVars: []

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: false
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  #ingressClassName: nginx
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 60
  # targetMemoryUtilizationPercentage: 60
  behavior: {} # available only on Kubernetes â‰¥1.23 [required "autoscaling/v2"]
#    scaleDown:
#      stabilizationWindowSeconds: 300
#      policies:
#      - type: Percent
#        value: 100
#        periodSeconds: 15
#    scaleUp:
#      stabilizationWindowSeconds: 0
#      policies:
#      - type: Percent
#        value: 100
#        periodSeconds: 15
#      - type: Pods
#        value: 2
#        periodSeconds: 15
#      selectPolicy: Max

nodeSelector: {}

tolerations: []

affinity: {}

#startupProbe:
#  exec:
#    command:
#      - cat
#      - /tmp/healthy
#  initialDelaySeconds: 5
#  periodSeconds: 2
#  timeoutSeconds: 5
#  successThreshold: 1
#  failureThreshold: 500
#livenessProbe:
#  httpGet:
#    path: /actuator/health/liveness
#    port: http
#  initialDelaySeconds: 60
#  periodSeconds: 10
#  timeoutSeconds: 5
#  successThreshold: 1
#  failureThreshold: 3
#readinessProbe:
#  httpGet:
#    path: /actuator/health/readiness
#    port: http
#  initialDelaySeconds: 60
#  periodSeconds: 10
#  timeoutSeconds: 5
#  successThreshold: 1
#  failureThreshold: 3

persistence:
  enabled: false
  accessMode: ReadWriteOnce
  ## Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  size: 1Gi
  annotations:
    "helm.sh/hook": pre-install,post-delete
    "helm.sh/hook-weight": "0"
    "helm.sh/resource-policy": keep
  volume:
    name: data
    mountPath: /data
  ## Specify an existing volume claim instead of creating a new one.
  ## When using this option all following options like storageClass, accessMode and size are ignored.
  existingClaim: ""

#Custom parameter
container:
  enabled: false
  command: apt update

secretMounts: []

## Prometheus Exporter / Metrics
##
metrics:
  enabled: false

  ## Prometheus Service Monitor
  ## ref: https://github.com/coreos/prometheus-operator
  ##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md
  ##
  serviceMonitor: 
    ## If the operator is installed in your cluster, set to true to create a Service Monitor Entry
    ##
    enabled: false 

    ## Specify the namespace where Prometheus Operator is running
    ##
    namespace: monitoring

    path: /actuator/prometheus 
    ## Specify the interval at which metrics should be scraped
    ##
    interval: 30s
    ## Specify the timeout after which the scrape is ended
    ##
    # scrapeTimeout: 30s
    ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
    ##
    additionalLabels: {}
